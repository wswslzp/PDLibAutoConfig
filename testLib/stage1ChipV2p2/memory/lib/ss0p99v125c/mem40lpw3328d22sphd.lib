/*---------------------------------------------------------------------*/
/*               Copyright(c) Synopsys, Inc.                           */
/*     All Rights reserved - Unpublished -rights reserved under        */
/*     the Copyright laws of the United States of America.             */
/*                                                                     */
/*  U.S. Patents: 7,093,156 B1 and 7,406,620 B2 (and more pending).    */
/*                                                                     */
/*  This file includes the Confidential information of Synopsys, Inc.  */
/*  and Huali.                                                         */
/*  The receiver of this Confidential Information shall not disclose   */
/*  it to any third party and shall protect its confidentiality by     */
/*  using the same degree of care, but not less than a reasonable      */
/*  degree of care, as the receiver uses to protect receiver's own     */
/*  Confidential Information.                                          */
/*  Licensee acknowledges and agrees that all output generated for     */
/*  Licensee by Synopsys, Inc. as described in the pertinent Program   */
/*  Schedule(s), or generated by Licensee through use of any Compiler  */
/*  licensed hereunder contains information that complies with the     */
/*  Virtual Component Identification Physical Tagging Standard (VCID)  */
/*  as maintained by the Virtual Socket Interface Alliance (VSIA).     */
/*  Such information may be expressed in GDSII Layer 63 or other such  */
/*  layer designated by the VSIA, hardware definition languages, or    */
/*  other formats.  Licensee is not authorized to alter or change any  */
/*  such information.                                                  */
/*---------------------------------------------------------------------*/
/*                                                                     */
/*  Built for linux64 and running on linux64.                          */
/*                                                                     */
/*  Software           : Rev: O-2019.03-SP1                            */
/*  Library Format     : Rev: 1.05.00                                  */
/*  Compiler Name      : hu40npk41p11sadsl01msa02                      */
/*  Platform           : Linux2.6.32-754.28.1.el6.x86_64               */
/*                     : #1 SMP Wed Mar 11 18:38:45 UTC 2020x86_64     */
/*  Date of Generation : Fri Jan 29 21:49:54 CST 2021                  */
/*                                                                     */
/*---------------------------------------------------------------------*/
/*   --------------------------------------------------------------   */
/*                       Template Revision : 4.3.2                    */
/*   --------------------------------------------------------------   */
/*                      * Synchronous, 1-Port SRAM *                  */
/*                           * Synopsys Model *                       */
/*                THIS IS A SYNCHRONOUS 1-PORT MEMORY MODEL           */
/*                                                                    */
/*   Memory Name:mem40lpw3328d22sphd                                  */
/*   Memory Size:3328 words x 22 bits                                 */
/*                                                                    */
/*     Assumed 1 Standard Fanout Load =  0.002 pf                     */
/*     Assumed 1 Area Unit            = 1 square microns              */
/*                               PORT NAME                            */
/*                               ---------                            */
/*               Output Ports                                         */
/*                                   Q[21:0]                          */
/*               Input Ports:                                         */
/*                                   ADR[11:0]                        */
/*                                   D[21:0]                          */
/*                                   WE                               */
/*                                   ME                               */
/*                                   CLK                              */
/*                                   TEST1                            */
/*                                   RME                              */
/*                                   RM[3:0]                          */
/*                                   LS                               */
/* -------------------------------------------------------------------- */
/* -------------------------------------------------------------------- */
/* This instance is generated with Periphery_Vt = STANDARD option.    */
/* -------------------------------------------------------------------- */



library (mem40lpw3328d22sphd_lib) {
    date                     : "Jan 29, 2021";
    revision                 : 1.00;
    delay_model              : "table_lookup";
    simulation               : false;
    time_unit                : "1ns";
    voltage_unit             : "1V";
    current_unit             : "1mA";
    pulling_resistance_unit  : "1kohm";
    leakage_power_unit       : "1nW" ;
    capacitive_load_unit       (1, pf);
    library_features          (report_delay_calculation);
    in_place_swap_mode       : match_footprint;
    default_input_pin_cap    : 1.000 ;
    default_inout_pin_cap    : 1.000 ;
    default_max_transition   : 0.5;
    default_cell_leakage_power    : 0.00;
    default_leakage_power_density : 0.00;
    default_connection_class : universal;
    default_fanout_load      : 1.000 ;
    default_output_pin_cap   : 0.000 ;
    bus_naming_style         : "%s[%d]" ;
    nom_process              : 0.999999;
    nom_voltage              :  0.990;
    nom_temperature          : 125.000;
    operating_conditions(ff1p21vn40c) { 
        process     :  1.000001;
        voltage     :  1.21;
        temperature :  -40;
        tree_type   :  best_case_tree;
  }
    operating_conditions(tt1p1v25c) { 
        process     :  1.0;
        voltage     :  1.1;
        temperature :  25;
        tree_type   :  balanced_tree;
  }
    operating_conditions(ss0p99v125c) { 
        process     :  0.999999;
        voltage     :  0.99;
        temperature :  125;
        tree_type   :  worst_case_tree;
  }

    default_operating_conditions   : ss0p99v125c;

    define("total_intrinsic_cap", "cell",  "float");
    slew_lower_threshold_pct_rise  :  30.0 ;
    slew_upper_threshold_pct_rise  :  70.0 ;
    input_threshold_pct_fall       :  50.0 ;
    output_threshold_pct_fall      :  50.0 ;
    input_threshold_pct_rise       :  50.0 ;
    output_threshold_pct_rise      :  50.0 ;
    slew_lower_threshold_pct_fall  :  30.0 ;
    slew_upper_threshold_pct_fall  :  70.0 ;
    slew_derate_from_library       :  0.5 ;
    lu_table_template(CELL_UP) {
        variable_1 : input_net_transition;
        variable_2 : total_output_net_capacitance;
        index_1 (" 0.020000, 0.050000, 0.100000, 0.200000, 0.500000");
        index_2 (" 0.005000, 0.020000, 0.050000, 0.100000, 0.250000");
    }
    lu_table_template(CELL_DN) {
        variable_1 : input_net_transition;
        variable_2 : total_output_net_capacitance;
        index_1 (" 0.020000, 0.050000, 0.100000, 0.200000, 0.500000");
        index_2 (" 0.005000, 0.020000, 0.050000, 0.100000, 0.250000");
    }
    lu_table_template(CONSTRAINT_HIGH_POS) {
        variable_1 : related_pin_transition;
        variable_2 : constrained_pin_transition;
        index_1 (" 0.020000, 0.050000, 0.100000, 0.200000, 0.500000");
        index_2 (" 0.020000, 0.050000, 0.100000, 0.200000, 0.500000");
    }
    lu_table_template(CLK_TRAN) {
        variable_1 : constrained_pin_transition;
        index_1 (" 0.020000, 0.050000, 0.100000, 0.200000, 0.500000");
    }
    lu_table_template(TRAN) {
        variable_1 : total_output_net_capacitance;
        index_1 (" 0.005000, 0.020000, 0.050000, 0.100000, 0.250000");
    }
    power_lut_template(INPUT_BY_TRANS) {
        variable_1 : input_transition_time;
        index_1 (" 0.020000, 0.050000, 0.100000, 0.200000, 0.500000");
    }
    type (  Q_21_0) {
        base_type : array;
        data_type : bit;
        bit_width : 22;
        bit_from  : 21;
        bit_to    : 0;
        downto    : true;
    }
    type (  ADR_11_0) {
        base_type : array;
        data_type : bit;
        bit_width : 12;
        bit_from  : 11;
        bit_to    : 0;
        downto    : true;
    }
    type (  D_21_0) {
        base_type : array;
        data_type : bit;
        bit_width : 22;
        bit_from  : 21;
        bit_to    : 0;
        downto    : true;
    }
    type (  RM_3_0) {
        base_type : array;
        data_type : bit;
        bit_width : 4;
        bit_from  : 3;
        bit_to    : 0;
        downto    : true;
    }

    cell (mem40lpw3328d22sphd) {
                        memory () {
                        type          : ram ;
                        address_width : 12 ;
                        word_width    : 22 ;
                        }
        total_intrinsic_cap  : 978.294783; /* in pf */
        interface_timing : true;
        dont_use         : true;
        map_only         : true;
        dont_touch       : true;
	area             : 33606.6500; /* 331.1000 X 101.5000 square microns */
        bus(Q) {
            bus_type : Q_21_0;
            direction            : output;
             pin(Q[21:0]) {
/*    DATAOUT POWER */
             internal_power() {
              rise_power(scalar) {
                values (" 0.036449");
              }
              fall_power(scalar) {
                values (" 0.036449");
              }
             }
            }
            max_capacitance     : 0.250000;
            memory_read () {
            address : ADR ;
            }
            timing() {
                related_pin     : "CLK";
                timing_sense    : non_unate;
                timing_type     : falling_edge;
                sdf_cond        : "!LS & TEST1";
                when            : "!LS & TEST1";
                cell_rise(CELL_UP) {
                    values( " 0.610880,  0.655434,  0.744289,  0.892325,  1.336398",\
                            " 0.622573,  0.667127,  0.755981,  0.904018,  1.348090",\
                            " 0.642127,  0.686681,  0.775536,  0.923572,  1.367645",\
                            " 0.680546,  0.725100,  0.813955,  0.961991,  1.406064",\
                            " 0.775961,  0.820515,  0.909369,  1.057406,  1.501478");
                }
                cell_fall(CELL_DN) {
                    values( " 0.619422,  0.663976,  0.752831,  0.900867,  1.344940",\
                            " 0.631115,  0.675669,  0.764523,  0.912560,  1.356632",\
                            " 0.650669,  0.695223,  0.784077,  0.932114,  1.376186",\
                            " 0.689088,  0.733642,  0.822496,  0.970533,  1.414605",\
                            " 0.784503,  0.829057,  0.917911,  1.065948,  1.510020");
                }
                rise_transition(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                fall_transition(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
            }
            timing() {
                related_pin     : "CLK";
                timing_sense    : non_unate;
                timing_type     : rising_edge;
                sdf_cond        : "!LS & TEST1";
                when            : "!LS & TEST1";
                cell_rise(CELL_UP) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                cell_fall(CELL_DN) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                retaining_rise(CELL_UP) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                retaining_fall(CELL_DN) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                retain_rise_slew(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                retain_fall_slew(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
                rise_transition(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                fall_transition(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
            }
            timing() {
                related_pin     : "CLK";
                timing_sense    : non_unate;
                timing_type     : rising_edge;
                sdf_cond        : "  !RME & !LS & !TEST1";
                when            : "  !RME & !LS & !TEST1";
                cell_rise(CELL_UP) {
                    values( " 2.032540,  2.076652,  2.164627,  2.311198,  2.750874",\
                            " 2.044232,  2.088345,  2.176320,  2.322890,  2.762566",\
                            " 2.063786,  2.107899,  2.195874,  2.342445,  2.782120",\
                            " 2.102205,  2.146318,  2.234293,  2.380864,  2.820539",\
                            " 2.197620,  2.241733,  2.329708,  2.476279,  2.915954");
                }
                cell_fall(CELL_DN) {
                    values( " 2.040997,  2.085110,  2.173084,  2.319655,  2.759331",\
                            " 2.052689,  2.096802,  2.184777,  2.331348,  2.771023",\
                            " 2.072244,  2.116356,  2.204331,  2.350902,  2.790578",\
                            " 2.110663,  2.154775,  2.242750,  2.389321,  2.828997",\
                            " 2.206077,  2.250190,  2.338165,  2.484736,  2.924411");
                }
                retaining_rise(CELL_UP) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                retaining_fall(CELL_DN) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                retain_rise_slew(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                retain_fall_slew(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
                rise_transition(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                fall_transition(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
            }
            timing() {
                related_pin     : "CLK";
                timing_sense    : non_unate;
                timing_type     : rising_edge;
                sdf_cond        : "  RME &  !RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                when            : "  RME &  !RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                cell_rise(CELL_UP) {
                    values( " 2.783564,  2.829882,  2.922256,  3.076155,  3.537815",\
                            " 2.795841,  2.842160,  2.934533,  3.088432,  3.550092",\
                            " 2.816373,  2.862692,  2.955065,  3.108964,  3.570624",\
                            " 2.856713,  2.903031,  2.995405,  3.149304,  3.610964",\
                            " 2.956899,  3.003217,  3.095591,  3.249490,  3.711149");
                }
                cell_fall(CELL_DN) {
                    values( " 2.792444,  2.838762,  2.931136,  3.085035,  3.546695",\
                            " 2.804721,  2.851040,  2.943413,  3.097312,  3.558972",\
                            " 2.825253,  2.871572,  2.963945,  3.117844,  3.579504",\
                            " 2.865593,  2.911911,  3.004285,  3.158184,  3.619844",\
                            " 2.965779,  3.012097,  3.104471,  3.258370,  3.720029");
                }
                retaining_rise(CELL_UP) {
                    values( " 2.511037,  2.534196,  2.580383,  2.657333,  2.888162",\
                            " 2.523314,  2.546473,  2.592660,  2.669610,  2.900439",\
                            " 2.543846,  2.567005,  2.613192,  2.690142,  2.920971",\
                            " 2.584186,  2.607345,  2.653532,  2.730482,  2.961311",\
                            " 2.684372,  2.707531,  2.753718,  2.830667,  3.061497");
                }
                retaining_fall(CELL_DN) {
                    values( " 2.511037,  2.534196,  2.580383,  2.657333,  2.888162",\
                            " 2.523314,  2.546473,  2.592660,  2.669610,  2.900439",\
                            " 2.543846,  2.567005,  2.613192,  2.690142,  2.920971",\
                            " 2.584186,  2.607345,  2.653532,  2.730482,  2.961311",\
                            " 2.684372,  2.707531,  2.753718,  2.830667,  3.061497");
                }
                retain_rise_slew(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                retain_fall_slew(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
                rise_transition(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                fall_transition(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
            }
            timing() {
                related_pin     : "CLK";
                timing_sense    : non_unate;
                timing_type     : rising_edge;
                sdf_cond        : "  RME &  RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                when            : "  RME &  RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                cell_rise(CELL_UP) {
                    values( " 2.129741,  2.173412,  2.260507,  2.405612,  2.840891",\
                            " 2.141316,  2.184988,  2.272083,  2.417188,  2.852467",\
                            " 2.160675,  2.204347,  2.291442,  2.436547,  2.871826",\
                            " 2.198710,  2.242381,  2.329476,  2.474582,  2.909860",\
                            " 2.293170,  2.336842,  2.423937,  2.569042,  3.004321");
                }
                cell_fall(CELL_DN) {
                    values( " 2.138113,  2.181785,  2.268880,  2.413985,  2.849264",\
                            " 2.149689,  2.193361,  2.280456,  2.425561,  2.860840",\
                            " 2.169048,  2.212719,  2.299814,  2.444919,  2.880198",\
                            " 2.207082,  2.250754,  2.337849,  2.482954,  2.918233",\
                            " 2.301543,  2.345215,  2.432310,  2.577415,  3.012694");
                }
                retaining_rise(CELL_UP) {
                    values( " 1.872787,  1.894622,  1.938170,  2.010723,  2.228362",\
                            " 1.884362,  1.906198,  1.949746,  2.022298,  2.239938",\
                            " 1.903721,  1.925557,  1.969104,  2.041657,  2.259296",\
                            " 1.941756,  1.963592,  2.007139,  2.079692,  2.297331",\
                            " 2.036216,  2.058052,  2.101600,  2.174152,  2.391792");
                }
                retaining_fall(CELL_DN) {
                    values( " 1.872787,  1.894622,  1.938170,  2.010723,  2.228362",\
                            " 1.884362,  1.906198,  1.949746,  2.022298,  2.239938",\
                            " 1.903721,  1.925557,  1.969104,  2.041657,  2.259296",\
                            " 1.941756,  1.963592,  2.007139,  2.079692,  2.297331",\
                            " 2.036216,  2.058052,  2.101600,  2.174152,  2.391792");
                }
                retain_rise_slew(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                retain_fall_slew(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
                rise_transition(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                fall_transition(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
            }
            timing() {
                related_pin     : "CLK";
                timing_sense    : non_unate;
                timing_type     : rising_edge;
                sdf_cond        : "  RME &  !RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                when            : "  RME &  !RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                cell_rise(CELL_UP) {
                    values( " 2.032540,  2.076652,  2.164627,  2.311198,  2.750874",\
                            " 2.044232,  2.088345,  2.176320,  2.322890,  2.762566",\
                            " 2.063786,  2.107899,  2.195874,  2.342445,  2.782120",\
                            " 2.102205,  2.146318,  2.234293,  2.380864,  2.820539",\
                            " 2.197620,  2.241733,  2.329708,  2.476279,  2.915954");
                }
                cell_fall(CELL_DN) {
                    values( " 2.040997,  2.085110,  2.173084,  2.319655,  2.759331",\
                            " 2.052689,  2.096802,  2.184777,  2.331348,  2.771023",\
                            " 2.072244,  2.116356,  2.204331,  2.350902,  2.790578",\
                            " 2.110663,  2.154775,  2.242750,  2.389321,  2.828997",\
                            " 2.206077,  2.250190,  2.338165,  2.484736,  2.924411");
                }
                retaining_rise(CELL_UP) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                retaining_fall(CELL_DN) {
                    values( " 1.772990,  1.795046,  1.839034,  1.912319,  2.132157",\
                            " 1.784683,  1.806739,  1.850726,  1.924012,  2.143850",\
                            " 1.804237,  1.826293,  1.870281,  1.943566,  2.163404",\
                            " 1.842656,  1.864712,  1.908700,  1.981985,  2.201823",\
                            " 1.938071,  1.960127,  2.004114,  2.077400,  2.297238");
                }
                retain_rise_slew(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                retain_fall_slew(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
                rise_transition(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                fall_transition(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
            }
            timing() {
                related_pin     : "CLK";
                timing_sense    : non_unate;
                timing_type     : rising_edge;
                sdf_cond        : "  RME &  RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                when            : "  RME &  RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS & !TEST1";
                cell_rise(CELL_UP) {
                    values( " 1.735969,  1.779199,  1.865415,  2.009054,  2.439936",\
                            " 1.747427,  1.790658,  1.876873,  2.020513,  2.451395",\
                            " 1.766591,  1.809821,  1.896036,  2.039676,  2.470558",\
                            " 1.804241,  1.847472,  1.933687,  2.077326,  2.508209",\
                            " 1.897748,  1.940978,  2.027194,  2.170833,  2.601715");
                }
                cell_fall(CELL_DN) {
                    values( " 1.744257,  1.787487,  1.873703,  2.017342,  2.448224",\
                            " 1.755716,  1.798946,  1.885161,  2.028801,  2.459683",\
                            " 1.774879,  1.818109,  1.904325,  2.047964,  2.478846",\
                            " 1.812529,  1.855760,  1.941975,  2.085614,  2.516497",\
                            " 1.906036,  1.949266,  2.035482,  2.179121,  2.610003");
                }
                retaining_rise(CELL_UP) {
                    values( " 1.481610,  1.503226,  1.546333,  1.618153,  1.833594",\
                            " 1.493069,  1.514684,  1.557792,  1.629611,  1.845053",\
                            " 1.512232,  1.533847,  1.576955,  1.648775,  1.864216",\
                            " 1.549883,  1.571498,  1.614606,  1.686425,  1.901866",\
                            " 1.643389,  1.665004,  1.708112,  1.779932,  1.995373");
                }
                retaining_fall(CELL_DN) {
                    values( " 1.481610,  1.503226,  1.546333,  1.618153,  1.833594",\
                            " 1.493069,  1.514684,  1.557792,  1.629611,  1.845053",\
                            " 1.512232,  1.533847,  1.576955,  1.648775,  1.864216",\
                            " 1.549883,  1.571498,  1.614606,  1.686425,  1.901866",\
                            " 1.643389,  1.665004,  1.708112,  1.779932,  1.995373");
                }
                retain_rise_slew(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                retain_fall_slew(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
                rise_transition(TRAN) {
                    values( " 0.038522,  0.124981,  0.297892,  0.58608,  1.451775");
                }
                fall_transition(TRAN) {
                    values( " 0.035209,  0.114376,  0.27272,  0.536628,  1.328353");
                }
            }
          }
        bus(ADR) {
            bus_type : ADR_11_0;
            direction            : input;
            capacitance          : 0.001618;
            max_transition       : 0.5;
            fanout_load          : 1.000000;
             pin(ADR[11:0]) {
/*    ADDRESS POWER */
             internal_power() {
               when             : "ME";
              rise_power(INPUT_BY_TRANS) {
                values (" 0.121378,  0.121378,  0.121378,  0.121378,  0.121378");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.121378,  0.121378,  0.121378,  0.121378,  0.121378");
              }
             }
/*    ADDR_DISABLED POWER */
             internal_power() {
               when             : "!ME";
              rise_power(INPUT_BY_TRANS) {
                values (" 0.121378,  0.121378,  0.121378,  0.121378,  0.121378");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.121378,  0.121378,  0.121378,  0.121378,  0.121378");
              }
             }
            }
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENADR";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.301764,  0.313146,  0.330863,  0.365812,  0.468296",\
                            " 0.290072,  0.301453,  0.319170,  0.354119,  0.456603",\
                            " 0.270517,  0.281899,  0.299616,  0.334565,  0.437049",\
                            " 0.232098,  0.243480,  0.261197,  0.296146,  0.398630",\
                            " 0.136684,  0.148065,  0.165782,  0.200731,  0.303215");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.301764,  0.313146,  0.330863,  0.365812,  0.468296",\
                            " 0.290072,  0.301453,  0.319170,  0.354119,  0.456603",\
                            " 0.270517,  0.281899,  0.299616,  0.334565,  0.437049",\
                            " 0.232098,  0.243480,  0.261197,  0.296146,  0.398630",\
                            " 0.136684,  0.148065,  0.165782,  0.200731,  0.303215");
              }
            }
            timing() {
              timing_type       : hold_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENADR";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.125864,  0.115139,  0.098536,  0.066210,  -0.025183",\
                            " 0.137556,  0.126831,  0.110229,  0.077902,  -0.013491",\
                            " 0.157111,  0.146385,  0.129783,  0.097457,  0.006063",\
                            " 0.195530,  0.184804,  0.168202,  0.135875,  0.044482",\
                            " 0.290944,  0.280219,  0.263617,  0.231290,  0.139897");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.125864,  0.115139,  0.098536,  0.066210,  -0.025183",\
                            " 0.137556,  0.126831,  0.110229,  0.077902,  -0.013491",\
                            " 0.157111,  0.146385,  0.129783,  0.097457,  0.006063",\
                            " 0.195530,  0.184804,  0.168202,  0.135875,  0.044482",\
                            " 0.290944,  0.280219,  0.263617,  0.231290,  0.139897");
              }
            }
          }
        bus(D) {
            bus_type : D_21_0;
            direction            : input;
            capacitance          : 0.001247;
            max_transition       : 0.5;
            fanout_load          : 1.000000;
             pin(D[21:0]) {
/*    DATA POWER */
             internal_power() {
              rise_power(INPUT_BY_TRANS) {
                values (" 0.077250,  0.077250,  0.077250,  0.077250,  0.077250");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.077250,  0.077250,  0.077250,  0.077250,  0.077250");
              }
             }
            }
            memory_write () {
            address : ADR ;
            clocked_on : CLK ;
            }
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "END";
              when              : "WE & ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.077644,  0.088544,  0.106792,  0.143586,  0.228805",\
                            " 0.065952,  0.076852,  0.095099,  0.131893,  0.217112",\
                            " 0.046398,  0.057297,  0.075545,  0.112339,  0.197558",\
                            " 0.007979,  0.018879,  0.037126,  0.073920,  0.159139",\
                            " -0.087436,  -0.076536,  -0.058289,  -0.021495,  0.063724");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.077644,  0.088544,  0.106792,  0.143586,  0.228805",\
                            " 0.065952,  0.076852,  0.095099,  0.131893,  0.217112",\
                            " 0.046398,  0.057297,  0.075545,  0.112339,  0.197558",\
                            " 0.007979,  0.018879,  0.037126,  0.073920,  0.159139",\
                            " -0.087436,  -0.076536,  -0.058289,  -0.021495,  0.063724");
              }
            }
            timing() {
              timing_type       : hold_rising;
              related_pin       : "CLK";
              sdf_cond          : "END";
              when              : "WE & ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.349378,  0.338478,  0.320230,  0.283437,  0.198218",\
                            " 0.361070,  0.350171,  0.331923,  0.295129,  0.209910",\
                            " 0.380625,  0.369725,  0.351477,  0.314684,  0.229465",\
                            " 0.419044,  0.408144,  0.389896,  0.353102,  0.267884",\
                            " 0.514459,  0.503559,  0.485311,  0.448517,  0.363298");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.349378,  0.338478,  0.320230,  0.283437,  0.198218",\
                            " 0.361070,  0.350171,  0.331923,  0.295129,  0.209910",\
                            " 0.380625,  0.369725,  0.351477,  0.314684,  0.229465",\
                            " 0.419044,  0.408144,  0.389896,  0.353102,  0.267884",\
                            " 0.514459,  0.503559,  0.485311,  0.448517,  0.363298");
              }
            }
          }
        pin(WE) {
            direction            : input;
            capacitance          : 0.002113;
            max_transition       : 0.5;
            fanout_load          : 2.000000;
/*    WRITE_ENABLE POWER */
             internal_power() {
              rise_power(INPUT_BY_TRANS) {
                values (" 1.350238,  1.350238,  1.350238,  1.350238,  1.350238");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 1.350238,  1.350238,  1.350238,  1.350238,  1.350238");
              }
             }
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENWE";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.273535,  0.284232,  0.301746,  0.336831,  0.429436",\
                            " 0.261842,  0.272540,  0.290053,  0.325138,  0.417743",\
                            " 0.242288,  0.252986,  0.270499,  0.305584,  0.398189",\
                            " 0.203869,  0.214567,  0.232080,  0.267165,  0.359770",\
                            " 0.108454,  0.119152,  0.136665,  0.171750,  0.264355");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.273535,  0.284232,  0.301746,  0.336831,  0.429436",\
                            " 0.261842,  0.272540,  0.290053,  0.325138,  0.417743",\
                            " 0.242288,  0.252986,  0.270499,  0.305584,  0.398189",\
                            " 0.203869,  0.214567,  0.232080,  0.267165,  0.359770",\
                            " 0.108454,  0.119152,  0.136665,  0.171750,  0.264355");
              }
            }
            timing() {
              timing_type       : hold_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENWE";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.125864,  0.115139,  0.098536,  0.066210,  -0.025183",\
                            " 0.137556,  0.126831,  0.110229,  0.077902,  -0.013491",\
                            " 0.157111,  0.146385,  0.129783,  0.097457,  0.006063",\
                            " 0.195530,  0.184804,  0.168202,  0.135875,  0.044482",\
                            " 0.290944,  0.280219,  0.263617,  0.231290,  0.139897");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.125864,  0.115139,  0.098536,  0.066210,  -0.025183",\
                            " 0.137556,  0.126831,  0.110229,  0.077902,  -0.013491",\
                            " 0.157111,  0.146385,  0.129783,  0.097457,  0.006063",\
                            " 0.195530,  0.184804,  0.168202,  0.135875,  0.044482",\
                            " 0.290944,  0.280219,  0.263617,  0.231290,  0.139897");
              }
            }
          }
        pin(ME) {
            direction            : input;
            capacitance          : 0.001023;
            max_transition       : 0.5;
            fanout_load          : 1.000000;
/*    MEMORY_ENABLE POWER */
             internal_power() {
              rise_power(INPUT_BY_TRANS) {
                values (" 0.027707,  0.027707,  0.027707,  0.027707,  0.027707");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.027707,  0.027707,  0.027707,  0.027707,  0.027707");
              }
             }
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENME";
              when              : "1";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.487454,  0.499762,  0.519764,  0.560646,  0.684366",\
                            " 0.475762,  0.488069,  0.508072,  0.548953,  0.672673",\
                            " 0.456207,  0.468515,  0.488518,  0.529399,  0.653119",\
                            " 0.417789,  0.430096,  0.450099,  0.490980,  0.614700",\
                            " 0.322374,  0.334681,  0.354684,  0.395565,  0.519285");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.487454,  0.499762,  0.519764,  0.560646,  0.684366",\
                            " 0.475762,  0.488069,  0.508072,  0.548953,  0.672673",\
                            " 0.456207,  0.468515,  0.488518,  0.529399,  0.653119",\
                            " 0.417789,  0.430096,  0.450099,  0.490980,  0.614700",\
                            " 0.322374,  0.334681,  0.354684,  0.395565,  0.519285");
              }
            }
            timing() {
              timing_type       : hold_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENME";
              when              : "1";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.000330,  -0.011610,  -0.031095,  -0.070473,  -0.186984",\
                            " 0.012022,  0.000082,  -0.019403,  -0.058780,  -0.175291",\
                            " 0.031577,  0.019637,  0.000152,  -0.039226,  -0.155737",\
                            " 0.069996,  0.058056,  0.038571,  -0.000807,  -0.117318",\
                            " 0.165410,  0.153470,  0.133985,  0.094608,  -0.021903");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.000330,  -0.011610,  -0.031095,  -0.070473,  -0.186984",\
                            " 0.012022,  0.000082,  -0.019403,  -0.058780,  -0.175291",\
                            " 0.031577,  0.019637,  0.000152,  -0.039226,  -0.155737",\
                            " 0.069996,  0.058056,  0.038571,  -0.000807,  -0.117318",\
                            " 0.165410,  0.153470,  0.133985,  0.094608,  -0.021903");
              }
            }
          }
        pin(CLK) {
            timing() {
                timing_type : "min_pulse_width";
                related_pin : "CLK";
                sdf_cond    : "ENCLK";
                when        : "!TEST1";
                fall_constraint(CLK_TRAN) {
                    values (" 0.472246,  0.483939,  0.503493,  0.541912,  0.637327");
                }
                rise_constraint(CLK_TRAN) {
                    values (" 0.217773,  0.231804,  0.255269,  0.301372,  0.415870");
                }
            }
            timing() {
                timing_type : "min_pulse_width";
                related_pin : "CLK";
                sdf_cond    : "ENCLK_test1";
                when        : "TEST1";
                fall_constraint(CLK_TRAN) {
                    values (" 0.619422,  0.631115,  0.650669,  0.689088,  0.784503");
                }
                rise_constraint(CLK_TRAN) {
                    values (" 2.138113,  2.149689,  2.169048,  2.207082,  2.301543");
                }
            }
            timing() {
                timing_type : "minimum_period";
                related_pin : "CLK";
                sdf_cond    : "ENCLK_rmezo";
                when        : "!RME";
                rise_constraint(CLK_TRAN) {
                    values (" 2.178407,  2.190100,  2.209654,  2.248073,  2.343488");
                }
                fall_constraint(CLK_TRAN) {
                    values (" 2.178407,  2.190100,  2.209654,  2.248073,  2.343488");
                }
            }
            timing() {
                timing_type : "minimum_period";
                related_pin : "CLK";
                sdf_cond    : "ENCLK_vdm";
                when        : "RME &  !RM[0] & !RM[1] & !RM[2] & !RM[3] ";
                rise_constraint(CLK_TRAN) {
                    values (" 2.961387,  2.973079,  2.992634,  3.031053,  3.126467");
                }
                fall_constraint(CLK_TRAN) {
                    values (" 2.961387,  2.973079,  2.992634,  3.031053,  3.126467");
                }
            }
            timing() {
                timing_type : "minimum_period";
                related_pin : "CLK";
                sdf_cond    : "ENCLK_slw";
                when        : "RME &  RM[0] & !RM[1] & !RM[2] & !RM[3] ";
                rise_constraint(CLK_TRAN) {
                    values (" 2.272026,  2.283719,  2.303273,  2.341692,  2.437107");
                }
                fall_constraint(CLK_TRAN) {
                    values (" 2.272026,  2.283719,  2.303273,  2.341692,  2.437107");
                }
            }
            timing() {
                timing_type : "minimum_period";
                related_pin : "CLK";
                sdf_cond    : "ENCLK_def";
                when        : "RME &  !RM[0] & RM[1] & !RM[2] & !RM[3] ";
                rise_constraint(CLK_TRAN) {
                    values (" 2.178407,  2.190100,  2.209654,  2.248073,  2.343488");
                }
                fall_constraint(CLK_TRAN) {
                    values (" 2.178407,  2.190100,  2.209654,  2.248073,  2.343488");
                }
            }
            timing() {
                timing_type : "minimum_period";
                related_pin : "CLK";
                sdf_cond    : "ENCLK_fst";
                when        : "RME &  RM[0] & RM[1] & !RM[2] & !RM[3] ";
                rise_constraint(CLK_TRAN) {
                    values (" 1.736362,  1.748055,  1.767609,  1.806028,  1.901443");
                }
                fall_constraint(CLK_TRAN) {
                    values (" 1.736362,  1.748055,  1.767609,  1.806028,  1.901443");
                }
            }
            clock                : true;
            direction            : input;
            capacitance          : 0.007910;
            max_transition       : 0.5;
            fanout_load          : 4.000000;
/*    DISABLED_NORMAL POWER */
             internal_power() {
               when             : "!ME & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 0.147500,  0.147500,  0.147500,  0.147500,  0.147500");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    WRITE_FAST POWER */
             internal_power() {
               when             : "ME & WE & RME &  RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 7.805999,  7.805999,  7.805999,  7.805999,  7.805999");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    READ_SLOW POWER */
             internal_power() {
               when             : "ME & !WE & RME &  RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 8.654537,  8.654537,  8.654537,  8.654537,  8.654537");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    WRITE_VDDMIN POWER */
             internal_power() {
               when             : "ME & WE & RME &  !RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 9.629453,  9.629453,  9.629453,  9.629453,  9.629453");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    DISABLED_LIGHT_SLEEP POWER */
             internal_power() {
               when             : "!ME & LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 0.147500,  0.147500,  0.147500,  0.147500,  0.147500");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    WRITE_SLOW POWER */
             internal_power() {
               when             : "ME & WE & RME &  RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 7.624522,  7.624522,  7.624522,  7.624522,  7.624522");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    READ_FAST POWER */
             internal_power() {
               when             : "ME & !WE & RME &  RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 7.688647,  7.688647,  7.688647,  7.688647,  7.688647");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    WRITE_DEF POWER */
             internal_power() {
               when             : "ME & WE & RME &  !RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 7.593123,  7.593123,  7.593123,  7.593123,  7.593123");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    READ_DEF POWER */
             internal_power() {
               when             : "ME & !WE & RME &  !RM[0] & RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 7.375017,  7.375017,  7.375017,  7.375017,  7.375017");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    WRITE POWER */
             internal_power() {
               when             : "ME & WE & !RME & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 7.593123,  7.593123,  7.593123,  7.593123,  7.593123");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    READ POWER */
             internal_power() {
               when             : "ME & !WE & !RME & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 7.375017,  7.375017,  7.375017,  7.375017,  7.375017");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
/*    READ_VDDMIN POWER */
             internal_power() {
               when             : "ME & !WE & RME &  !RM[0] & !RM[1] & !RM[2] & !RM[3]  & !LS";
              rise_power(INPUT_BY_TRANS) {
                values (" 10.615370,  10.615370,  10.615370,  10.615370,  10.615370");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 0.000000,  0.000000,  0.000000,  0.000000,  0.000000");
              }
             }
          }
        pin(TEST1) {
            direction            : input;
            capacitance          : 0.001023;
            max_transition       : 0.5;
            fanout_load          : 1.000000;
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENTEST1";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.487454,  0.499762,  0.519764,  0.560646,  0.684366",\
                            " 0.475762,  0.488069,  0.508072,  0.548953,  0.672673",\
                            " 0.456207,  0.468515,  0.488518,  0.529399,  0.653119",\
                            " 0.417789,  0.430096,  0.450099,  0.490980,  0.614700",\
                            " 0.322374,  0.334681,  0.354684,  0.395565,  0.519285");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.487454,  0.499762,  0.519764,  0.560646,  0.684366",\
                            " 0.475762,  0.488069,  0.508072,  0.548953,  0.672673",\
                            " 0.456207,  0.468515,  0.488518,  0.529399,  0.653119",\
                            " 0.417789,  0.430096,  0.450099,  0.490980,  0.614700",\
                            " 0.322374,  0.334681,  0.354684,  0.395565,  0.519285");
              }
            }
            timing() {
              timing_type       : hold_falling;
              related_pin       : "CLK";
              sdf_cond          : "ENTEST1";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 1.934680,  1.928526,  1.918525,  1.898085,  1.836225",\
                            " 1.952219,  1.946065,  1.936064,  1.915623,  1.853763",\
                            " 1.981551,  1.975397,  1.965395,  1.944955,  1.883095",\
                            " 2.039179,  2.033025,  2.023024,  2.002583,  1.940723",\
                            " 2.182301,  2.176147,  2.166146,  2.145705,  2.083846");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 1.934680,  1.928526,  1.918525,  1.898085,  1.836225",\
                            " 1.952219,  1.946065,  1.936064,  1.915623,  1.853763",\
                            " 1.981551,  1.975397,  1.965395,  1.944955,  1.883095",\
                            " 2.039179,  2.033025,  2.023024,  2.002583,  1.940723",\
                            " 2.182301,  2.176147,  2.166146,  2.145705,  2.083846");
              }
            }
          }
        pin(RME) {
            direction            : input;
            capacitance          : 0.001856;
            max_transition       : 0.5;
            fanout_load          : 1.000000;
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENRME";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.823060,  0.833971,  0.851835,  0.887622,  0.982079",\
                            " 0.811133,  0.822045,  0.839909,  0.875695,  0.970152",\
                            " 0.791188,  0.802100,  0.819963,  0.855750,  0.950207",\
                            " 0.752001,  0.762912,  0.780776,  0.816563,  0.911020",\
                            " 0.654678,  0.665589,  0.683453,  0.719240,  0.813696");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.823060,  0.833971,  0.851835,  0.887622,  0.982079",\
                            " 0.811133,  0.822045,  0.839909,  0.875695,  0.970152",\
                            " 0.791188,  0.802100,  0.819963,  0.855750,  0.950207",\
                            " 0.752001,  0.762912,  0.780776,  0.816563,  0.911020",\
                            " 0.654678,  0.665589,  0.683453,  0.719240,  0.813696");
              }
            }
            timing() {
              timing_type       : hold_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENRME";
              when              : "ME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 1.934680,  1.928526,  1.918525,  1.898085,  1.836225",\
                            " 1.952219,  1.946065,  1.936064,  1.915623,  1.853763",\
                            " 1.981551,  1.975397,  1.965395,  1.944955,  1.883095",\
                            " 2.039179,  2.033025,  2.023024,  2.002583,  1.940723",\
                            " 2.182301,  2.176147,  2.166146,  2.145705,  2.083846");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 1.934680,  1.928526,  1.918525,  1.898085,  1.836225",\
                            " 1.952219,  1.946065,  1.936064,  1.915623,  1.853763",\
                            " 1.981551,  1.975397,  1.965395,  1.944955,  1.883095",\
                            " 2.039179,  2.033025,  2.023024,  2.002583,  1.940723",\
                            " 2.182301,  2.176147,  2.166146,  2.145705,  2.083846");
              }
            }
          }
        bus(RM) {
            bus_type : RM_3_0;
            direction            : input;
            capacitance          : 0.001217;
            max_transition       : 0.5;
            fanout_load          : 1.000000;
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENRM";
              when              : "ME & RME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.806921,  0.817619,  0.835132,  0.870217,  0.962822",\
                            " 0.795229,  0.805926,  0.823440,  0.858525,  0.951130",\
                            " 0.775675,  0.786372,  0.803886,  0.838971,  0.931575",\
                            " 0.737256,  0.747953,  0.765467,  0.800552,  0.893156",\
                            " 0.641841,  0.652538,  0.670052,  0.705137,  0.797742");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.806921,  0.817619,  0.835132,  0.870217,  0.962822",\
                            " 0.795229,  0.805926,  0.823440,  0.858525,  0.951130",\
                            " 0.775675,  0.786372,  0.803886,  0.838971,  0.931575",\
                            " 0.737256,  0.747953,  0.765467,  0.800552,  0.893156",\
                            " 0.641841,  0.652538,  0.670052,  0.705137,  0.797742");
              }
            }
            timing() {
              timing_type       : hold_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENRM";
              when              : "ME & RME & !LS";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 1.934680,  1.928526,  1.918525,  1.898085,  1.836225",\
                            " 1.952219,  1.946065,  1.936064,  1.915623,  1.853763",\
                            " 1.981551,  1.975397,  1.965395,  1.944955,  1.883095",\
                            " 2.039179,  2.033025,  2.023024,  2.002583,  1.940723",\
                            " 2.182301,  2.176147,  2.166146,  2.145705,  2.083846");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 1.934680,  1.928526,  1.918525,  1.898085,  1.836225",\
                            " 1.952219,  1.946065,  1.936064,  1.915623,  1.853763",\
                            " 1.981551,  1.975397,  1.965395,  1.944955,  1.883095",\
                            " 2.039179,  2.033025,  2.023024,  2.002583,  1.940723",\
                            " 2.182301,  2.176147,  2.166146,  2.145705,  2.083846");
              }
            }
          }
        pin(LS) {
            direction            : input;
            capacitance          : 0.007207;
            max_transition       : 0.5;
            fanout_load          : 4.000000;
/*    LIGHT_SLEEP POWER */
             internal_power() {
              rise_power(INPUT_BY_TRANS) {
                values (" 1.488473,  1.488473,  1.488473,  1.488473,  1.488473");
              }
              fall_power(INPUT_BY_TRANS) {
                values (" 1.488473,  1.488473,  1.488473,  1.488473,  1.488473");
              }
             }
            timing() {
              timing_type       : setup_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENLS";
              when              : "ME";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.208654,  0.220594,  0.240079,  0.279457,  0.395968",\
                            " 0.196962,  0.208902,  0.228387,  0.267765,  0.384275",\
                            " 0.177408,  0.189348,  0.208833,  0.248210,  0.364721",\
                            " 0.138989,  0.150929,  0.170414,  0.209791,  0.326302",\
                            " 0.043574,  0.055514,  0.074999,  0.114377,  0.230887");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 1.357046,  1.368986,  1.388471,  1.427849,  1.544360",\
                            " 1.345354,  1.357294,  1.376779,  1.416156,  1.532667",\
                            " 1.325799,  1.337739,  1.357224,  1.396602,  1.513113",\
                            " 1.287380,  1.299320,  1.318805,  1.358183,  1.474694",\
                            " 1.191966,  1.203906,  1.223391,  1.262768,  1.379279");
              }
            }
            timing() {
              timing_type       : hold_rising;
              related_pin       : "CLK";
              sdf_cond          : "ENLS";
              when              : "ME";
              rise_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.291053,  0.269602,  0.236397,  0.171744,  0.030249",\
                            " 0.302745,  0.281294,  0.248089,  0.183437,  0.041941",\
                            " 0.322299,  0.300849,  0.267644,  0.202991,  0.061496",\
                            " 0.360718,  0.339267,  0.306063,  0.241410,  0.099914",\
                            " 0.456133,  0.434682,  0.401478,  0.336825,  0.195329");
              }
              fall_constraint(CONSTRAINT_HIGH_POS) {
                    values(" 0.291053,  0.269602,  0.236397,  0.171744,  0.030249",\
                            " 0.302745,  0.281294,  0.248089,  0.183437,  0.041941",\
                            " 0.322299,  0.300849,  0.267644,  0.202991,  0.061496",\
                            " 0.360718,  0.339267,  0.306063,  0.241410,  0.099914",\
                            " 0.456133,  0.434682,  0.401478,  0.336825,  0.195329");
              }
            }
          }
             leakage_power () {
               when  : "!LS";
               value : 32208.897125;
            }
             leakage_power () {
               when  : "LS";
               value : 11979.602146;
            }
    cell_leakage_power : 32208.897125;
    }
}
